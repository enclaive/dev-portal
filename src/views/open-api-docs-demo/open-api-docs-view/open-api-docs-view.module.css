.root {
	display: flex;
	gap: 24px;
}

.sidebar {
	background-color: var(--token-color-surface-primary);
	box-shadow: var(--token-surface-base-box-shadow);
	display: none;
	height: calc(100vh - var(--navigation-header-height));
	overflow: auto;
	padding: 24px 24px 100px 24px;
	position: sticky;
	top: var(--navigation-header-height);
	width: 320px;

	@media (--dev-dot-hide-mobile-menu) {
		display: block;
	}
}

.main {
	display: flex;
	flex-direction: column;
	flex: 1 1 0;
	gap: 24px;
	margin-left: auto;
	margin-right: auto;
	max-width: 1200px;
	min-width: min(100%, 320px);
	padding: 24px 24px 120px 24px;
}

/**
 * Operation object
 */

.operationColumns {
	display: flex;
	flex-direction: row-reverse;
	flex: 1 1 0;
	gap: 24px;
	min-width: 0;
	flex-wrap: wrap;

	& > * {
		flex: 1 1 0;
		min-width: min(100%, 360px);
	}
}

.operationPropertiesColumn {
	display: flex;
	flex-direction: column;
	gap: 8px;
}

.propertiesPlaceholder {
	max-height: 600px;
}

.operationCodeColumn {
	--sticky-spacing: 24px;

	align-self: flex-start;
	position: sticky;
	top: calc(var(--navigation-header-height) + var(--sticky-spacing));
}

.methodAndPath {
	display: flex;
	width: 100%;
}

/* Messy code block overrides */
.codePlaceholder {
	flex: 1 1 0;
	min-width: 0;

	/* & :global(.truncated-path) {
		color: var(--text-color-faded);
	} */

	/* Force max-height for code block */
	& [class*='style_linesColumn'] {
		max-height: 200px;
		overflow: auto !important;
	}

	/* Force wrapping in code block */
	& [class*='style_linesWrapper'] {
		width: 100% !important;
	}

	& [class*='style_LineOfCode'] {
		white-space: pre-wrap;
		overflow-wrap: break-word;
		min-width: 0;
	}
}
